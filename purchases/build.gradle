plugins {
    id 'java'
    id 'io.freefair.lombok'
    id 'org.springframework.boot'
    id 'io.spring.dependency-management'
    id 'com.bmuschko.docker-remote-api'
}

java {
    toolchain {
        languageVersion.set(JavaLanguageVersion.of(17))
    }
}

bootJar {
    archiveFileName = "${project.name}-boot-${project.version}.jar"
}


lombok {
    version = "${lombokVersion}"
}

repositories {
    mavenCentral()
}

dependencies {
    implementation 'javax.annotation:javax.annotation-api:1.3.2'

    implementation "org.mapstruct:mapstruct:${mapstructVersion}"
    annotationProcessor "org.mapstruct:mapstruct-processor:${mapstructVersion}"

    implementation 'org.springframework.boot:spring-boot-starter-webflux'

    implementation 'org.springframework.boot:spring-boot-starter-amqp'

    implementation 'org.springframework.boot:spring-boot-starter-data-r2dbc'
    implementation 'org.springframework.data:spring-data-relational'
    implementation 'org.postgresql:r2dbc-postgresql:1.0.4.RELEASE'

    implementation 'org.springdoc:springdoc-openapi-starter-webflux-ui:2.5.0'

    testImplementation 'org.springframework.boot:spring-boot-starter-test'

    testImplementation 'com.h2database:h2:2.2.224'
    testImplementation 'io.r2dbc:r2dbc-h2:1.0.0.RELEASE'

    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.10.2'
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.10.2'
    testImplementation 'org.assertj:assertj-core:3.25.3'

    testImplementation 'org.springframework.amqp:spring-rabbit-test'

    testImplementation project(":migration")
}

test {
    useJUnitPlatform()
}

import com.bmuschko.gradle.docker.tasks.image.*

task buildDockerImage(type: DockerBuildImage) {
    dependsOn bootJar
    inputDir = projectDir
    images = ["$project.group/$project.name:$project.version".toString()]
}